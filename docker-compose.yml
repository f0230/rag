services:
  # FastAPI Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
    environment:
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
    depends_on:
      - chroma
    networks:
      - rag-network

  # ChromaDB Vector Database Service
  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - chroma-data:/data
    ports:
      - "8100:8000"  # Mapea el puerto 8000 interno al 8100 externo
    networks:
      - rag-network

  #  khoj
  khoj:
    image: khoj-ai/khoj:latest
    ports:
      - "4000:4000"
    volumes:
      - khoj-data:/data
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/khoj
    depends_on:
      - postgres
    networks:
      - rag-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - rag-network

networks:
  rag-network:
    driver: bridge

volumes:
  chroma-data:
  khoj-data:


  # AÃ±adir a docker-compose.yml
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=khoj
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rag-network
